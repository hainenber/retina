name: goreleaser
on:
  pull_request:
    branches: [main]
  push:
    tags: ["v*"]
permissions:
  contents: write
  packages: write
jobs:
  build:
    name: Build kubectl-retina
    if: github.ref_type == 'branch'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ">=1.21.0"
      - name: Run GoReleaser build
        uses: goreleaser/goreleaser-action@v5
        with:
          distribution: goreleaser
          version: latest
          args: build --snapshot --clean
  release:
    name: Release kubectl-retina
    runs-on: ubuntu-latest
    if: github.ref_type == 'tag'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ">=1.21.0"
      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.4.0
      - name: Write signing key to disk (only needed for `cosign sign --key`)
        run: echo "${{ secrets.SIGNING_SECRET }}" > cosign.key
      - name: Run GoReleaser release
        uses: goreleaser/goreleaser-action@v5
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Sign container image
        run: |
          export TAG=(make version)
          cosign sign --key cosign.key \
            ghcr.io/${{ github.repository }}/kubectl-retina:$TAG \
            ghcr.io/${{ github.repository }}/kubectl-retina:$TAG-linux-amd64 \
            ghcr.io/${{ github.repository }}/kubectl-retina:$TAG-linux-arm64
        env:
          COSIGN_PASSWORD: "" 